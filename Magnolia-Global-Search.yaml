openapi: 3.0.0
info:
  title: Search API
  description: 'API for handling various search functionalities including keyword search, popular searches, and autocomplete.'
  version: 1.0.0
servers:
  - url: 'https://api.example.com'
paths:
  /api/v1/search:
    get:
      summary: Search products
      description: 'Search for products based on different criteria like keywords, categories, brands, etc.'
      parameters:
        - description: Keyword to search for
          in: query
          name: keyword
          required: true
          schema:
            type: string
        - description: Language for the search results
          in: query
          name: language
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - es
              - fr
              - de
              - it
              - pt
              - zh
              - ja
              - ko
              - ru
              - ar
        - description: Category to filter products
          in: query
          name: category
          required: false
          schema:
            type: array
            items:
              type: string
            example:
              - Dairy & Eggs
              - Bakery
        - description: Brand to filter products
          in: query
          name: brand
          required: false
          schema:
            type: array
            items:
              type: string
            example:
              - Banana Boat
              - Beech-Nut
        - description: Minimum price range filter
          in: query
          name: min_price
          required: false
          schema:
            format: float
            type: number
        - description: Maximum price range filter
          in: query
          name: max_price
          required: false
          schema:
            format: float
            type: number
        - description: 'Field to sort by (e.g., price, popularity, rating)'
          in: query
          name: sort_by
          required: false
          schema:
            enum:
              - price
              - popularity
              - rating
            type: string
        - description: Sort order (asc or desc)
          in: query
          name: order
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Filter by promotions
          in: query
          name: promotions
          required: false
          schema:
            type: array
            items:
              type: string
            example:
              - On Sale
              - Buy More Save More
        - description: Filter by department
          in: query
          name: department
          required: false
          schema:
            type: array
            items:
              type: string
            example:
              - Bakery
              - Grocery
        - description: Filter by dietary interest
          in: query
          name: dietary_interest
          required: false
          schema:
            type: array
            items:
              type: string
            example:
              - Gluten Free
              - Organic
        - description: Filter by EBT eligibility
          in: query
          name: ebt_eligibility
          required: false
          schema:
            type: boolean
        - description: Filter by availability online
          in: query
          name: available_online
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  facets:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            doc_count:
                              type: integer
                      promotions:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            doc_count:
                              type: integer
                      brands:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            doc_count:
                              type: integer
                      department:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            doc_count:
                              type: integer
                      dietary_interest:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            doc_count:
                              type: integer
                      ebt_eligibility:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            doc_count:
                              type: integer
                      available_online:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            doc_count:
                              type: integer
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        brand:
                          type: string
                        category:
                          type: string
                        price:
                          type: number
                          format: float
                        rating:
                          type: number
                          format: float
                        popularity:
                          type: integer
        '400':
          description: Invalid input
        '404':
          description: No results found
        '500':
          description: Internal server error
  /api/v1/autocomplete:
    get:
      description: Get autocomplete suggestions based on partial input. It includes detecting misspelled words and providing suggestions for corrected spellings if needed.
      parameters:
        - description: The partial input for which to retrieve suggestions.
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          description: Autocomplete suggestions
          content:
            application/json:
              schema:
                properties:
                  suggestions:
                    items:
                      type: string
                    type: array
                type: object
        '400':
          description: Invalid input
        '500':
          description: Server error
  /api/v1/popular-searches:
    get:
      description: 'Provides a list of commonly searched terms that appear as soon as the search field is activated. This helps users quickly find popular results, even before they start typing. It''s based on searches from all users, making it useful for first-time users to see what others are searching for'
      responses:
        '200':
          description: A list of popular searches
          content:
            application/json:
              schema:
                type: object
                properties:
                  popularSearches:
                    type: array
                    items:
                      type: string
        '500':
          description: Server error
