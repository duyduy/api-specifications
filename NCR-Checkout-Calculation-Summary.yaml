openapi: 3.0.3
info:
  title: Cart Calculation API
  description: API for calculating cart values including item-level savings and digital deal references.
  version: 1.0.0
servers:
  - url: 'https://api.example.com/v1'
paths:
  /cart/calculate:
    post:
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/TenantIdentifyHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
      summary: Calculate cart values
      description: Pass the entire basket to the NCR promotional engine to return accurate cart-level calculations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartCalculationRequest'
      responses:
        '200':
          description: Successful response with cart calculations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartCalculationResponse'
        '500':
          description: NCR promotional engine is down or an error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  parameters:
    CarNumberInPath:
      in: path
      name: CardNumber
      description: 'The CardNumber. It is a loyalty card returned by a third-party provider, such as Clutch or Retalix.'
      required: true
      schema:
        type: string
    AuthorizationHeader:
      in: header
      name: Authorization
      required: true
      schema:
        type: string
        example: Bearer your-access-token
      description: 'Bearer token for authorization. Format: ''Bearer $accessToken'', where $accessToken is obtained from ''api/Token'' endpoint.'
    TenantIdentifyHeader:
      in: header
      name: TenantIdentify
      required: true
      schema:
        type: string
        example: MCT
      description: 'Tenant identifier, which must be ''MCT''.'
    ContentTypeHeader:
      in: header
      name: Content-Type
      required: true
      schema:
        type: string
        enum:
          - application/json
      description: Specifies the format of the payload being sent. Must be 'application/json' for this endpoint.
  schemas:
    CartCalculationRequest:
      type: object
      properties:
        basket:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'
        promoCodes:
          type: array
          items:
            type: string
          description: A list of promotional codes applied to the cart.
      required:
        - basket
    BasketItem:
      type: object
      properties:
        itemCode:
          type: string
          description: 'Unique item code either UPC or SKU. If there is no item code, then an empty string should be sent.'
        quantity:
          type: object
          properties:
            unitType:
              type: string
              enum:
                - SIMPLE_QUANTITY
                - GRAMS
                - GRAINS
                - OUNCES
                - POUNDS
                - STONES
                - KILOGRAMS
                - TONS_LONG
                - TONS_METRIC
                - CENTILITER
                - CUBIC_CENTIMETER
                - CUBIC_DECIMETER
                - CUBIC_DECAMETER
                - CUBIC_FOOT
                - CUBIC_INCH
                - CUBIC_METER
                - CUBIC_MILLIMETER
                - CUBIC_YARD
                - DECILITER
                - DRAM
                - GALLON_UK
                - GALLON_US_DRY
                - GALLON_US_LIQUID
                - GILL_UK
                - GILL_US
                - IMPERIAL_GALLON
                - JIGGER
                - KILOLITER
                - LITER
                - MILLILITER
                - OUNCE_UK_LIQUID
                - OUNCE_US_LIQUID
                - PINT_UK
                - PINT_US_DRY
                - PINT_US_LIQUID
                - QUART_UK
                - QUART_US_DRY
                - QUART_US_LIQUID
                - SHOT
                - YARDS
                - METERS
                - SQUARE_YARDS
                - SQUARE_METERS
                - GENERIC_UNIT_SALES
              description: 'Type of Unit of Measure , , example for 2 items of "$2.99 ea" we use "SIMPLE_QUANTITY"'
            units:
              type: number
              description: Amount of quantity under consideration for transaction
              example: 2
          required:
            - unitType
            - units
        unitPrice:
          type: number
          format: float
          description: 'Unit selling price for Item , example "$2.99 ea" => the unitPrice is 2.99'
          example: 2.99
      required:
        - itemCode
    CartCalculationResponse:
      type: object
      properties:
        estimatedSubtotal:
          type: number
          format: float
          description: The estimated subtotal before any discounts.
        itemDiscounts:
          type: number
          format: float
          description: Total item discounts applied.
        digitalDeals:
          type: number
          format: float
          description: Total digital deals applied.
        subtotalAfterDiscounts:
          type: number
          format: float
          description: The subtotal after discounts are applied.
        estimatedTotal:
          type: number
          format: float
          description: The estimated total after all calculations.
        items:
          type: array
          items:
            $ref: '#/components/schemas/CalculatedItem'
    CalculatedItem:
      type: object
      properties:
        dealType:
          type: integer
          description: |
            The type of deal applied to the item:
            - 2: Price
            - 3: Price for multiple
            - 4: Price weight
            - 7: Percentage off
            - 8: Buy X, Get Y
            - 9: Everyday Low Price (FE labeling - no calculation)
        itemId:
          type: string
          description: The unique identifier for the item.
        quantity:
          type: integer
          description: The quantity of the item.
        originalPrice:
          type: number
          format: float
          description: The original price of the item before any discounts.
        calculatedPrice:
          type: number
          format: float
          description: The calculated price after applying promotions.
        promotion:
          type: string
          description: 'The promotional offer applied to the item, e.g., "2 for $5.00".'
        strikeThroughPrice:
          type: number
          format: float
          description: The original price to be displayed with a strikethrough.
        promoCodes:
          type: array
          items:
            type: string
          description: A list of promotional codes applied to the item.
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message.
